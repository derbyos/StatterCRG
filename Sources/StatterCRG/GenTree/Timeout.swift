// Timeout.swift
// Statter
//
// This file auto-generated by treemaker, do not edit
//

import Foundation
public struct Timeout : PathNodeId, Identifiable {
    public var parent: Period
    public var id: StatePath { statePath }
    public let statePath: StatePath
    @ImmutableLeaf public var timeoutId: UUID?

    @ImmutableLeaf public var readonly: Bool?

    @Leaf public var owner: String?

    @Leaf public var review: Bool?

    @Leaf public var retainedReview: Bool?

    @Leaf public var running: Bool?

    @Leaf public var precedingJam: UUID?

    @ImmutableLeaf public var precedingJamNumber: Int?

    @ImmutableLeaf public var duration: Int?

    @Leaf public var periodClockElapsedStart: Int?

    @Leaf public var periodClockElapsedEnd: Int?

    @Leaf public var periodClocEnd: Int?

    @Leaf public var walltimeStart: Int?

    @Leaf public var walltimeEnd: Int?

    public func delete() { connection.set(key: statePath.adding("Delete"), value: .bool(true), kind: .set) }
    public func insertAfter() { connection.set(key: statePath.adding("InsertAfter"), value: .bool(true), kind: .set) }
    public init(parent: Period, _ key: UUID) {
        self.parent = parent
        statePath = parent.adding(.id("Timeout", id: key))

        _timeoutId = parent.leaf("timeoutId").immutable
        _readonly = parent.leaf("Readonly").immutable
        _owner = parent.leaf("Owner")
        _review = parent.leaf("Review")
        _retainedReview = parent.leaf("RetainedReview")
        _running = parent.leaf("Running")
        _precedingJam = parent.leaf("PrecedingJam")
        _precedingJamNumber = parent.leaf("PrecedingJamNumber").immutable
        _duration = parent.leaf("Duration").immutable
        _periodClockElapsedStart = parent.leaf("PeriodClockElapsedStart")
        _periodClockElapsedEnd = parent.leaf("PeriodClockElapsedEnd")
        _periodClocEnd = parent.leaf("PeriodClocEnd")
        _walltimeStart = parent.leaf("WalltimeStart")
        _walltimeEnd = parent.leaf("WalltimeEnd")
        _timeoutId.parentPath = statePath
        _readonly.parentPath = statePath
        _owner.parentPath = statePath
        _review.parentPath = statePath
        _retainedReview.parentPath = statePath
        _running.parentPath = statePath
        _precedingJam.parentPath = statePath
        _precedingJamNumber.parentPath = statePath
        _duration.parentPath = statePath
        _periodClockElapsedStart.parentPath = statePath
        _periodClockElapsedEnd.parentPath = statePath
        _periodClocEnd.parentPath = statePath
        _walltimeStart.parentPath = statePath
        _walltimeEnd.parentPath = statePath
    }
    public init(parent: Period, statePath: StatePath) {
        self.parent = parent
        self.statePath = statePath
        _timeoutId = parent.leaf("timeoutId").immutable
        _readonly = parent.leaf("Readonly").immutable
        _owner = parent.leaf("Owner")
        _review = parent.leaf("Review")
        _retainedReview = parent.leaf("RetainedReview")
        _running = parent.leaf("Running")
        _precedingJam = parent.leaf("PrecedingJam")
        _precedingJamNumber = parent.leaf("PrecedingJamNumber").immutable
        _duration = parent.leaf("Duration").immutable
        _periodClockElapsedStart = parent.leaf("PeriodClockElapsedStart")
        _periodClockElapsedEnd = parent.leaf("PeriodClockElapsedEnd")
        _periodClocEnd = parent.leaf("PeriodClocEnd")
        _walltimeStart = parent.leaf("WalltimeStart")
        _walltimeEnd = parent.leaf("WalltimeEnd")
        _timeoutId.parentPath = statePath
        _readonly.parentPath = statePath
        _owner.parentPath = statePath
        _review.parentPath = statePath
        _retainedReview.parentPath = statePath
        _running.parentPath = statePath
        _precedingJam.parentPath = statePath
        _precedingJamNumber.parentPath = statePath
        _duration.parentPath = statePath
        _periodClockElapsedStart.parentPath = statePath
        _periodClockElapsedEnd.parentPath = statePath
        _periodClocEnd.parentPath = statePath
        _walltimeStart.parentPath = statePath
        _walltimeEnd.parentPath = statePath
    }
}
extension Period {
    public func timeout(_ key: UUID) -> Timeout { .init(parent: self, key) }
}
