// Period.swift
// Statter
//
// This file auto-generated by treemaker, do not edit
//

import Foundation
public struct Period : PathNode {
    public var parent: Game
    public let statePath: StatePath
    @Leaf public var team1Points: Int?

    @Leaf public var team2Points: Int?

    @Leaf public var currentJamNumber: Int?

    public init(parent: Game, period: Int? = nil) {
        self.parent = parent
        if let period {
            statePath = parent.adding(.number("Period", param: period))
        } else {
            statePath =  parent.adding(.wild("Period"))
        }

        _team1Points = parent.leaf("Team1Points")
        _team2Points = parent.leaf("Team2Points")
        _currentJamNumber = parent.leaf("CurrentJamNumber")
        _team1Points.parentPath = statePath
        _team2Points.parentPath = statePath
        _currentJamNumber.parentPath = statePath
    }
    public init(parent: Game, statePath: StatePath) {
        self.parent = parent
        self.statePath = statePath
        _team1Points = parent.leaf("Team1Points")
        _team2Points = parent.leaf("Team2Points")
        _currentJamNumber = parent.leaf("CurrentJamNumber")
        _team1Points.parentPath = statePath
        _team2Points.parentPath = statePath
        _currentJamNumber.parentPath = statePath
    }
}
extension Game {
    public func period(_ period: Int? = nil) -> Period { .init(parent: self, period: period) }
}
