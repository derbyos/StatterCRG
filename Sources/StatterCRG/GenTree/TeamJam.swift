// TeamJam.swift
// Statter
//
// This file auto-generated by treemaker, do not edit
//

import Foundation
public struct TeamJam<P:PathSpecified> : PathNodeId, Identifiable {
    public var parent: Jam<P>
    public var id: StatePath { statePath }
    public let statePath: StatePath
    @Leaf public var teamJamID: UUID?

    public init(parent: Jam<P>, _ key: Int) {
        self.parent = parent
        statePath = parent.adding(.number("TeamJam", param: key))

        _teamJamID = parent.leaf("teamJamID")
        _teamJamID.parentPath = statePath
    }
    public init(parent: Jam<P>, _ key: UUID) {
        self.parent = parent
        statePath = parent.adding(.id("TeamJam", id: key))

        _teamJamID = parent.leaf("teamJamID")
        _teamJamID.parentPath = statePath
    }
    public init(parent: Jam<P>, statePath: StatePath) {
        self.parent = parent
        self.statePath = statePath
        _teamJamID = parent.leaf("teamJamID")
        _teamJamID.parentPath = statePath
    }
}
extension Jam {
    public func teamJam(_ key: Int) -> TeamJam<P> { .init(parent: self, key) }
}
extension Jam {
    public func teamJam(_ key: UUID) -> TeamJam<P> { .init(parent: self, key) }
}
