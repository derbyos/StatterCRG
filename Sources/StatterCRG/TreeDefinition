// The definitions for the data tree.  The treemaker script
// will convert this to the tree data structures

root WS
    node Device
        leaf Name String
        leaf Id UUID
    end
    node Client
        leaf RemoteAddress String
        leaf Id String
    end
end

root ScoreBoard
//    node CurrentGame
//        leaf Game UUID
//        leaf InJam Bool
//        leaf OfficialReview Bool
//    end
    ref CurrentGame Game
    node Clients
        node Device
            key id UUID?
            leaf Comment String
        end
    end
    
    enum Version
        case Release
    end
    subscript Version String
    leaf BlankStatsbookFound Bool
end

node Period Game
    key period Int?
    leaf Team1Points Int
    leaf Team2Points Int
    leaf CurrentJamNumber Int
end

node Game ScoreBoard
    key id UUID
    
    leaf Game UUID

    !public var teamOne: Team { team(1) }
    !public var teamTwo: Team { team(2) }
    !public var periodClock: Clock { clock(.period) }
    !public var jamClock: Clock { clock(.jam) }
    !public var lineupClock: Clock { clock(.lineup) }
    !public var timeOutClock: Clock { clock(.timeOut) }
    !public var intermissionClock: Clock { clock(.intermission) }

    leaf CurrentPeriodNumber Int
    leaf OfficialScore Bool
    leaf RulesetName String

    leaf InJam Bool
    leaf OfficialReview Bool
    
    leaf TimeoutOwner String
    // These are commands, not state
    action StartJam
    action StopJam
    action Timeout
    action OfficialTimeout
end

node Team Game
    key team Int
    leaf Team Int
    leaf Name String
    leaf FullName String
//    leaf AlternateName String
    leaf LeagueName String
    // this is actually a map of ID -> String
    map UniformColor String
//    leaf Color String
    // A custom color for differnt roles
    !public struct Color {
    !   public init(role: Team.AlternateName? = nil, component: Component) {
    !       self.role = role
    !       self.component = component
    !   }
    !   var role: Team.AlternateName?
    !   public enum Component : String {
    !       case fg
    !       case bg
    !       case glow
    !   }
    !   var component: Component
    !   var rawValue: String {
    !       if let role { return role.rawValue + "_" + component.rawValue }
    !       else { return component.rawValue }
    !   }
    !}
    subscript Color String
    leaf Score Int
    leaf Timeouts Int
    leaf OfficialReviews Int
    flag RetainedOfficialReview
    leaf DisplayLead Bool
    leaf JamScore Int
    leaf NoInitial Bool
    // path to file
    leaf Logo String
    
    // these are lowercase
    enum AlternateName
        case operator
        case scoreboard
        case whiteboard
        case overlay
    end
    subscript AlternateName String

    flag Timeout
    flag OfficialReview
end

node Clock Game
    enum Kind
        case timeOut Timeout
        case Period
        case Lineup
        case Jam
        case Intermission
    end
    key kind Kind
    leaf Time Int
    leaf InvertedTime Int
    leaf MaximumTime Int
    leaf Readonly Bool
    leaf Running Bool
    leaf Name String
    leaf Direction Bool
    leaf Number Int
end


node Jam <Period Game>
    key jam Int
    leaf WalltimeStart Int
end

node TeamJam Jam<P>
    key team Int
end


node Skater Team
    key Id UUID
    // skater = "", alt skater "ALT", bench "B", bench alt captain = "BA", captain = "C",  alt captain "AC"
    leaf Flags String
    leaf Name String
    leaf Pronouns String
    leaf RosterNumber String
end
